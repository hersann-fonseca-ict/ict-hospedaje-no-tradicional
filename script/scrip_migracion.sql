--Quitar nulos de estados
UPDATE PERFIL SET APROBAR = 0 WHERE APROBAR = NULL;
UPDATE PERFIL SET DESAFILIAR = 0 WHERE DESAFILIAR = NULL;
UPDATE PERFIL SET RECHAZAR = 0 WHERE RECHAZAR = NULL;

DECLARE
	CURSOR perfiles_temp_cursor IS
	SELECT * FROM (
		SELECT
			ID_PERFIL,
			CODIGO_TIPO_SERVICIO,
			CORREO,
			FECHA_CREACION,
			EMPRESA_ID,
			PERSONA_FISICA_ID,
			PERSONA_JURIDICA_ID,
			USU_SISTEMA_ID,
			APROBAR,
			DESAFILIAR,
			FECHA_APROBACION,
			FECHA_DESAFILIACION,
			OBSERVACIONES,
			FECHA_RECHAZO,
			RECHAZAR,
			MOTIVO_RECHAZO,
			(CASE WHEN PERSONA_FISICA_ID IS NOT NULL THEN 1 ELSE 0 END)
			+ (CASE WHEN PERSONA_JURIDICA_ID IS NOT NULL THEN 1 ELSE 0 END)
			+ (CASE WHEN EMPRESA_ID IS NOT NULL THEN 1 ELSE 0 END)
			AS CANTIDAD_PERSONAS
		FROM PERFIL
	) WHERE CANTIDAD_PERSONAS > 1;
  perfil_registro perfiles_temp_cursor%ROWTYPE;
  condicion NUMBER;
  nextId NUMBER;
BEGIN
	OPEN perfiles_temp_cursor;
	FETCH perfiles_temp_cursor INTO perfil_registro;
	WHILE perfiles_temp_cursor%found
    LOOP
		IF perfil_registro.PERSONA_FISICA_ID IS NOT NULL THEN
			SELECT COUNT(ID_PERFIL) INTO condicion FROM PERFIL p WHERE p.PERSONA_FISICA_ID = perfil_registro.PERSONA_FISICA_ID;
			IF condicion > 1 THEN
				SELECT MAX(ID_PERSONA_FISICA) INTO nextId FROM PERSONA_FISICA;
				INSERT INTO PERSONA_FISICA(
					ID_PERSONA_FISICA,
					APELLIDO_1,
					APELLIDO_2,
					DOMICILIO,
					FECHA_CREACION,
					IDENTIFICACION,
					NOMBRE,
					TIPO_IDEN_FISICA
				) SELECT
					nextId + 1,
					pf.APELLIDO_1,
					pf.APELLIDO_2,
					pf.DOMICILIO,
					pf.FECHA_CREACION,
					nextId + 1,
					pf.NOMBRE,
					pf.TIPO_IDEN_FISICA
				FROM PERSONA_FISICA pf
				WHERE pf.ID_PERSONA_FISICA = perfil_registro.PERSONA_FISICA_ID;
				--
				UPDATE PERFIL
				SET PERSONA_FISICA_ID = nextId + 1
				WHERE ID_PERFIL = perfil_registro.ID_PERFIL;
			END IF;
			--
			UPDATE PERFIL
			SET PERSONA_JURIDICA_ID = NULL, EMPRESA_ID = NULL, CODIGO_TIPO_SERVICIO = 'HNT'
			WHERE ID_PERFIL = perfil_registro.ID_PERFIL;
		ELSE
			SELECT COUNT(ID_PERFIL) INTO condicion FROM PERFIL p WHERE p.PERSONA_JURIDICA_ID = perfil_registro.PERSONA_JURIDICA_ID;
			IF condicion > 1 THEN
				SELECT MAX(ID_PERSONA_JURIDICA) INTO nextId FROM PERSONA_JURIDICA;
				INSERT INTO PERSONA_JURIDICA(
					ID_PERSONA_JURIDICA,
					APELLIDO_1_REPRESENTANTE,
					APELLIDO_2_REPRESENTANTE,
					CED_JURIDICA,
					CORREO,
					DOMICILIO,
					FECHA_CREACION,
					NOMBRE_COMERCIAL,
					NOMBRE_REPRESENTANTE
				) SELECT
					nextId + 1,
					pj.APELLIDO_1_REPRESENTANTE,
					pj.APELLIDO_2_REPRESENTANTE,
					nextId + 1,
					pj.CORREO,
					pj.DOMICILIO,
					pj.FECHA_CREACION,
					pj.NOMBRE_COMERCIAL || ' - 2',
					pj.NOMBRE_REPRESENTANTE
				FROM PERSONA_JURIDICA pj
				WHERE pj.ID_PERSONA_JURIDICA = perfil_registro.PERSONA_JURIDICA_ID;
				--
				UPDATE PERFIL
				SET PERSONA_JURIDICA_ID = nextId + 1
				WHERE ID_PERFIL = perfil_registro.ID_PERFIL;
			END IF;
			--
			UPDATE PERFIL
			SET PERSONA_FISICA_ID = NULL, EMPRESA_ID = NULL, CODIGO_TIPO_SERVICIO = 'HNT'
			WHERE ID_PERFIL = perfil_registro.ID_PERFIL;
		END IF;
		FETCH perfiles_temp_cursor INTO perfil_registro;
	END LOOP;
	CLOSE perfiles_temp_cursor;
	COMMIT;
END;

CREATE TABLE TEMP_PERFIL(
	ID_PERFIL NUMBER(19,0) NOT NULL,
	CODIGO_TIPO_SERVICIO VARCHAR2(20 CHAR),
	CORREO VARCHAR2(50 CHAR) NOT NULL,
	FECHA_CREACION DATE NOT NULL,
	EMPRESA_ID NUMBER(19,0),
	PERSONA_FISICA_ID NUMBER(19,0),
	PERSONA_JURIDICA_ID NUMBER(19,0),
	USU_SISTEMA_ID NUMBER(19,0),
	APROBAR NUMBER(1,0),
	DESAFILIAR NUMBER(1,0),
	FECHA_APROBACION DATE,
	FECHA_DESAFILIACION DATE,
	OBSERVACIONES VARCHAR2(255 CHAR),
	FECHA_RECHAZO TIMESTAMP (6),
	RECHAZAR NUMBER(1,0),
	MOTIVO_RECHAZO VARCHAR2(500 CHAR)
);

INSERT INTO TEMP_PERFIL(
	ID_PERFIL,
	CODIGO_TIPO_SERVICIO,
	CORREO,
	FECHA_CREACION,
	EMPRESA_ID,
	PERSONA_FISICA_ID,
	PERSONA_JURIDICA_ID,
	USU_SISTEMA_ID,
	APROBAR,
	DESAFILIAR,
	FECHA_APROBACION,
	FECHA_DESAFILIACION,
	OBSERVACIONES,
	FECHA_RECHAZO,
	RECHAZAR,
	MOTIVO_RECHAZO
) SELECT ID_PERFIL,
		CODIGO_TIPO_SERVICIO,
		CORREO,
		FECHA_CREACION,
		EMPRESA_ID,
		PERSONA_FISICA_ID,
		PERSONA_JURIDICA_ID,
		USU_SISTEMA_ID,
		APROBAR,
		DESAFILIAR,
		FECHA_APROBACION,
		FECHA_DESAFILIACION,
		OBSERVACIONES,
		FECHA_RECHAZO,
		RECHAZAR,
		MOTIVO_RECHAZO
FROM(
	SELECT
		ID_PERFIL,
		CODIGO_TIPO_SERVICIO,
		CORREO,
		FECHA_CREACION,
		EMPRESA_ID,
		PERSONA_FISICA_ID,
		PERSONA_JURIDICA_ID,
		USU_SISTEMA_ID,
		APROBAR,
		DESAFILIAR,
		FECHA_APROBACION,
		FECHA_DESAFILIACION,
		OBSERVACIONES,
		FECHA_RECHAZO,
		RECHAZAR,
		MOTIVO_RECHAZO,
		(CASE WHEN PERSONA_FISICA_ID IS NOT NULL THEN 1 ELSE 0 END)
		+ (CASE WHEN PERSONA_JURIDICA_ID IS NOT NULL THEN 1 ELSE 0 END)
		+ (CASE WHEN EMPRESA_ID IS NOT NULL THEN 1 ELSE 0 END)
		AS CANTIDAD_PERSONAS
	FROM PERFIL
)
WHERE CANTIDAD_PERSONAS > 1;

CREATE TABLE TEMP_LOCALIZACION(
	ID_LOC_INMUEBLE NUMBER(19,0) NOT NULL,
	CANTON NUMBER(19,0) NOT NULL,
	CODIGO VARCHAR2(255 CHAR),
	CORREO VARCHAR2(255 CHAR) NOT NULL,
	DIRECCION VARCHAR2(255 CHAR),
	DISTRITO NUMBER(19,0) NOT NULL,
	NUM_CAMAS NUMBER(10,0),
	NUM_HABITACION NUMBER(10,0),
	NUM_MAX_HUESPED NUMBER(10,0),
	PROVINCIA NUMBER(19,0) NOT NULL,
	TELEFONO VARCHAR2(30 CHAR),
	URL_INMUEBLE1 VARCHAR2(50 CHAR) NOT NULL,
	URL_INMUEBLE2 VARCHAR2(50 CHAR),
	URL_INMUEBLE3 VARCHAR2(50 CHAR),
	ALOJAMIENTO_ID NUMBER(19,0),
	ID_PERFIL NUMBER(19,0)
);

INSERT INTO TEMP_LOCALIZACION(
	ID_LOC_INMUEBLE,
	CANTON,
	CODIGO,
	CORREO,
	DIRECCION,
	DISTRITO,
	NUM_CAMAS,
	NUM_HABITACION,
	NUM_MAX_HUESPED,
	PROVINCIA,
	TELEFONO,
	URL_INMUEBLE1,
	URL_INMUEBLE2,
	URL_INMUEBLE3,
	ALOJAMIENTO_ID,
	ID_PERFIL
) SELECT l.ID_LOC_INMUEBLE,
	l.CANTON,
	l.CODIGO,
	l.CORREO,
	l.DIRECCION,
	l.DISTRITO,
	l.NUM_CAMAS,
	l.NUM_HABITACION,
	l.NUM_MAX_HUESPED,
	l.PROVINCIA,
	l.TELEFONO,
	l.URL_INMUEBLE1,
	l.URL_INMUEBLE2,
	l.URL_INMUEBLE3,
	l.ALOJAMIENTO_ID,
	l.ID_PERFIL
FROM LOCALIZACION l
INNER JOIN TEMP_PERFIL pt
	ON l.ID_PERFIL = pt.ID_PERFIL;


DELETE FROM LOCALIZACION l
WHERE EXISTS (
	SELECT pt.ID_PERFIL FROM TEMP_PERFIL pt
	WHERE l.ID_PERFIL = pt.ID_PERFIL
);

DELETE FROM PERFIL p
WHERE EXISTS (
	SELECT ID_PERFIL FROM TEMP_PERFIL pt
	WHERE p.ID_PERFIL = pt.ID_PERFIL
);

--Agregar las nuevas columnas a la tabla empresa
ALTER TABLE
    EMPRESA ADD(
        APROBADO NUMBER(1,0) DEFAULT 0,
		DESAFILIADO NUMBER(1,0) DEFAULT 0,
		RECHAZADO NUMBER(1,0) DEFAULT 0,
		FECHA_APROBADO DATE,
		FECHA_DESAFILIADO DATE,
		FECHA_RECHAZO DATE,
		MOTIVO_RECHAZO VARCHAR2(500),
		MOTIVO_DESAFILIACION VARCHAR2(500),
		PENDIENTE_DESAFILIAR NUMBER(1,0) DEFAULT 0
    );

--Obtener en el perfil los valores para las aprobaciones, rechazos y desafiliaciones y asignarlos a la empresa.
UPDATE EMPRESA e
SET (
		e.APROBADO,
		e.DESAFILIADO,
		e.RECHAZADO,
		e.FECHA_APROBADO,
		e.FECHA_DESAFILIADO,
		e.FECHA_RECHAZO,
		e.MOTIVO_RECHAZO
	) = (
	SELECT
		p.APROBAR,
		p.DESAFILIAR,
		p.RECHAZAR,
		p.FECHA_APROBACION,
		p.FECHA_DESAFILIACION,
		CAST(p.FECHA_RECHAZO AS DATE),
		p.MOTIVO_RECHAZO
	FROM PERFIL p
	WHERE p.EMPRESA_ID	= e.ID_EMPRESA
);

--Crear la nueva tabla
CREATE TABLE ESTABLECIMIENTO_POR_ANALISTA(
	ID_ESTABLECIMIENTO NUMBER(19,0) NOT NULL ENABLE, 
	EMPRESA_ID NUMBER(19,0), 
	JEFE_ID NUMBER(19,0), 
	LOC_INMUEBLE_ID NUMBER(19,0), 
	USUARIO_SISTEMA_ID NUMBER(19,0), 
	PRIMARY KEY (ID_ESTABLECIMIENTO)
);

/*
ALTER TABLE ESTABLECIMIENTO_POR_ANALISTA
	ADD CONSTRAINT FK3Y35PUKOR7OK8IFNE1K37W3R1 FOREIGN KEY (LOC_INMUEBLE_ID)
	REFERENCES LOCALIZACION (ID_LOC_INMUEBLE) ENABLE;
ALTER TABLE ESTABLECIMIENTO_POR_ANALISTA
	ADD CONSTRAINT FK8228LGJHFHPQUN1746INOXLQU FOREIGN KEY (EMPRESA_ID)
	REFERENCES EMPRESA (ID_EMPRESA) ENABLE;
ALTER TABLE ESTABLECIMIENTO_POR_ANALISTA
	ADD CONSTRAINT FKBT7IYF2JT3N1UKHA9FKHDB6B1 FOREIGN KEY (JEFE_ID)
	REFERENCES USUARIOS_SISTEMA (ID_USUARIO_SISTEMA) ENABLE;
ALTER TABLE ESTABLECIMIENTO_POR_ANALISTA
	ADD CONSTRAINT FKEEQN8PNIKID790F3DX3KGJJBW FOREIGN KEY (USUARIO_SISTEMA_ID)
	REFERENCES USUARIOS_SISTEMA (ID_USUARIO_SISTEMA) ENABLE;
*/

--Agregar las nuevas columnas a la tabla localizacion
ALTER TABLE
    LOCALIZACION ADD(
		FECHA_APROBACION DATE,
		FECHA_DESAFILIACION DATE,
		FECHA_RECHAZO DATE,
		APROBADO NUMBER(1,0) DEFAULT 0,
		DESAFILIADO NUMBER(1,0) DEFAULT 0,
		RECHAZADO NUMBER(1,0) DEFAULT 0,
		MOTIVO_RECHAZO VARCHAR2(500),
		MOTIVO_DESAFILIACION VARCHAR2(500),
		PENDIENTE_DESAFILIAR NUMBER(1,0) DEFAULT 0,
		EDITABLE NUMBER(1,0) DEFAULT 0
    );

--Obtener en el perfil los valores para las aprobaciones, rechazos y desafiliaciones y asignarlos a la localizacion.
UPDATE LOCALIZACION l
SET (
		l.APROBADO,
		l.DESAFILIADO,
		l.RECHAZADO,
		l.FECHA_APROBACION,
		l.FECHA_DESAFILIACION,
		l.FECHA_RECHAZO,
		l.MOTIVO_RECHAZO
	) = (
	SELECT
		p.APROBAR,
		p.DESAFILIAR,
		p.RECHAZAR,
		p.FECHA_APROBACION,
		p.FECHA_DESAFILIACION,
		CAST(p.FECHA_RECHAZO AS DATE),
		p.MOTIVO_RECHAZO
	FROM PERFIL p
	WHERE p.ID_PERFIL = l.ID_PERFIL
);

--Agregar columnas de la tabla tipo_servicio
ALTER TABLE
    TIPO_SERVICIO ADD(
		CODIGO VARCHAR(10)
    );
ALTER TABLE
    TIPO_SERVICIO MODIFY(
		NOMBRE VARCHAR(100)
    );
--Actualizar datos de la tabla tipo_servicio
UPDATE TIPO_SERVICIO
SET
	CODIGO='HNT',
	NOMBRE = 'Servicio de hospedaje no tradicional'
WHERE ID_TIPO_SERVICIO = 1;
--
UPDATE TIPO_SERVICIO
SET
	CODIGO='EI',
	NOMBRE = 'Empresa intermediaria o comercializadora'
WHERE ID_TIPO_SERVICIO = 2;
--
DELETE FROM TIPO_SERVICIO
WHERE ID_TIPO_SERVICIO = 3;

--Modificar columnas de la tabla tipo_servicio
ALTER TABLE
    TIPO_SERVICIO MODIFY(
		CODIGO VARCHAR(10) NOT NULL
    );

--Agregar las nuevas columnas a la tabla perfil
ALTER TABLE
    PERFIL ADD(
		TIPO_SERVICIO_ID NUMBER(19,0)
    );

--Asignar el tipo de perfil
UPDATE PERFIL p
SET
	p.TIPO_SERVICIO_ID = (
	SELECT ts.ID_TIPO_SERVICIO
	FROM TIPO_SERVICIO ts
	WHERE p.CODIGO_TIPO_SERVICIO = ts.CODIGO
);

--Modificar la nueva columnas a la tabla perfil
ALTER TABLE
    PERFIL MODIFY(
		TIPO_SERVICIO_ID NOT NULL
    );

--Eliminar columnas de la tabla perfil
ALTER TABLE
    PERFIL DROP(
		APROBAR,
		DESAFILIAR,
		FECHA_APROBACION,
		FECHA_DESAFILIACION,
		OBSERVACIONES,
		FECHA_RECHAZO,
		RECHAZAR,
		MOTIVO_RECHAZO
    );

--Modificar la nueva columnas a la tabla persona_fisica
ALTER TABLE
    PERSONA_FISICA ADD(
		IDENTIFICACION_TEMP VARCHAR(255)
    );

--Modificar la columna identificacion a la tabla persona_fisica para ser nula
ALTER TABLE
    PERSONA_FISICA MODIFY(
		IDENTIFICACION NUMBER NULL
    );

--Modificar la columna identificacion a la tabla persona_fisica desactivar constraint
ALTER TABLE PERSONA_FISICA DISABLE CONSTRAINT UK_TQK4DN0YCBCFLSM5Q3SD4D2V7;
	
--Actualizar datos de la tabla persona_fisica insertando la identificacion en una variable temporal
UPDATE PERSONA_FISICA
SET
	IDENTIFICACION_TEMP = CAST(IDENTIFICACION AS VARCHAR(255)),
	IDENTIFICACION = NULL;

--Modificar la columna identificacion a la tabla persona_fisica con el tipo varchar(255)
ALTER TABLE
    PERSONA_FISICA MODIFY(
		IDENTIFICACION VARCHAR(255)
    );

--Actualizar datos de la tabla persona_fisica cambiando el valor de la identificacion por la variable temporal
UPDATE PERSONA_FISICA
SET
	IDENTIFICACION = IDENTIFICACION_TEMP;

--Modificar la columna identificacion a la tabla persona_fisica para ser no nula
ALTER TABLE
    PERSONA_FISICA MODIFY(
		IDENTIFICACION VARCHAR(255) NOT NULL
    );

--Modificar la columna identificacion a la tabla persona_fisica desactivar constraint
ALTER TABLE PERSONA_FISICA ENABLE CONSTRAINT UK_TQK4DN0YCBCFLSM5Q3SD4D2V7;

--Eliminar columna temporal
ALTER TABLE
    PERSONA_FISICA DROP(
		IDENTIFICACION_TEMP
    );

--Modificar las columnas foraneas a la tabla perfil para desactivar constraint
ALTER TABLE PERFIL DISABLE CONSTRAINT FK3C538WE54EIUTJFTCT300HPJE;
ALTER TABLE PERFIL DISABLE CONSTRAINT FKB3VEHBVEOIR6Q47R7ELNWI7R1;
ALTER TABLE PERFIL DISABLE CONSTRAINT FKDRYL1FIMHGXQQACAPLCUPCIHQ;

CREATE TABLE TEMP_PERSONA_FISICA(
	ID_PERSONA_FISICA NUMBER(19,0) NOT NULL,
	APELLIDO_1 VARCHAR2(80 CHAR) NOT NULL,
	APELLIDO_2 VARCHAR2(80 CHAR),
	DOMICILIO VARCHAR2(200 CHAR),
	FECHA_CREACION DATE NOT NULL,
	IDENTIFICACION VARCHAR2(255) NOT NULL,
	NOMBRE VARCHAR2(80 CHAR) NOT NULL,
	TIPO_IDEN_FISICA VARCHAR2(255 CHAR),
	ID_PERFIL NUMBER(19,0)
);

INSERT INTO TEMP_PERSONA_FISICA(
	ID_PERSONA_FISICA,
	APELLIDO_1,
	APELLIDO_2,
	DOMICILIO,
	FECHA_CREACION,
	IDENTIFICACION,
	NOMBRE,
	TIPO_IDEN_FISICA,
	ID_PERFIL
) SELECT
	pf.ID_PERSONA_FISICA,
	pf.APELLIDO_1,
	pf.APELLIDO_2,
	pf.DOMICILIO,
	pf.FECHA_CREACION,
	pf.IDENTIFICACION,
	pf.NOMBRE,
	pf.TIPO_IDEN_FISICA,
	p.ID_PERFIL
FROM PERSONA_FISICA pf
LEFT JOIN PERFIL p
ON p.PERSONA_FISICA_ID	= pf.ID_PERSONA_FISICA;

DELETE FROM PERSONA_FISICA;

INSERT INTO PERSONA_FISICA
SELECT pf.ID_PERFIL,
	pf.APELLIDO_1,
	pf.APELLIDO_2,
	pf.DOMICILIO,
	pf.FECHA_CREACION,
	pf.IDENTIFICACION,
	pf.NOMBRE,
	pf.TIPO_IDEN_FISICA
FROM TEMP_PERSONA_FISICA pf
WHERE pf.ID_PERFIL IS NOT NULL;
	

CREATE TABLE TEMP_PERSONA_JURIDICA(
	ID_PERSONA_JURIDICA NUMBER(19,0) NOT NULL,
	APELLIDO_1_REPRESENTANTE VARCHAR2(80 CHAR) NOT NULL,
	APELLIDO_2_REPRESENTANTE VARCHAR2(80 CHAR),
	CED_JURIDICA VARCHAR2(20 CHAR) NOT NULL,
	CORREO VARCHAR2(80 CHAR),
	DOMICILIO VARCHAR2(200 CHAR),
	FECHA_CREACION DATE NOT NULL,
	NOMBRE_COMERCIAL VARCHAR2(80 CHAR) NOT NULL,
	NOMBRE_REPRESENTANTE VARCHAR2(80 CHAR) NOT NULL,
	ID_PERFIL NUMBER(19,0)
);

INSERT INTO TEMP_PERSONA_JURIDICA(
	ID_PERSONA_JURIDICA,
	APELLIDO_1_REPRESENTANTE,
	APELLIDO_2_REPRESENTANTE,
	CED_JURIDICA,
	CORREO,
	DOMICILIO,
	FECHA_CREACION,
	NOMBRE_COMERCIAL,
	NOMBRE_REPRESENTANTE,
	ID_PERFIL
) SELECT
	pj.ID_PERSONA_JURIDICA,
	pj.APELLIDO_1_REPRESENTANTE,
	pj.APELLIDO_2_REPRESENTANTE,
	pj.CED_JURIDICA,
	pj.CORREO,
	pj.DOMICILIO,
	pj.FECHA_CREACION,
	pj.NOMBRE_COMERCIAL,
	pj.NOMBRE_REPRESENTANTE,
	p.ID_PERFIL
FROM PERSONA_JURIDICA pj
LEFT JOIN PERFIL p
ON p.PERSONA_JURIDICA_ID = pj.ID_PERSONA_JURIDICA;

DELETE FROM PERSONA_JURIDICA;
INSERT INTO PERSONA_JURIDICA
SELECT pj.ID_PERFIL,
	pj.APELLIDO_1_REPRESENTANTE,
	pj.APELLIDO_2_REPRESENTANTE,
	pj.CED_JURIDICA,
	pj.CORREO,
	pj.DOMICILIO,
	pj.FECHA_CREACION,
	pj.NOMBRE_COMERCIAL,
	pj.NOMBRE_REPRESENTANTE
FROM TEMP_PERSONA_JURIDICA pj
WHERE pj.ID_PERFIL IS NOT NULL;

CREATE TABLE TEMP_EMPRESA(
	ID_EMPRESA NUMBER(19,0) NOT NULL,
	CIUDAD VARCHAR2(80 CHAR) NOT NULL,
	CODIGO_POSTAL VARCHAR2(80 CHAR) NOT NULL,
	CORREO VARCHAR2(50 CHAR),
	ESTADO VARCHAR2(80 CHAR) NOT NULL,
	NOMBRE_REPRESENTANTE VARCHAR2(50 CHAR),
	OTRAS_SENAS VARCHAR2(200 CHAR),
	PAIS VARCHAR2(80 CHAR) NOT NULL,
	PRIMER_APE VARCHAR2(50 CHAR),
	RAZON_SOCIAL VARCHAR2(80 CHAR) NOT NULL,
	SEGUNDO_APE VARCHAR2(50 CHAR),
	TELEFONO VARCHAR2(30 CHAR),
	URL VARCHAR2(80 CHAR),
	APROBADO NUMBER(1,0) DEFAULT 0,
	DESAFILIADO NUMBER(1,0) DEFAULT 0,
	RECHAZADO NUMBER(1,0) DEFAULT 0,
	FECHA_APROBADO DATE,
	FECHA_DESAFILIADO DATE,
	FECHA_RECHAZO DATE,
	MOTIVO_RECHAZO VARCHAR2(500),
	MOTIVO_DESAFILIACION VARCHAR2(500),
	PENDIENTE_DESAFILIAR NUMBER(1,0) DEFAULT 0,
	ID_PERFIL NUMBER(19,0)
);

INSERT INTO TEMP_EMPRESA(
	ID_EMPRESA,
	CIUDAD,
	CODIGO_POSTAL,
	CORREO,
	ESTADO,
	NOMBRE_REPRESENTANTE,
	OTRAS_SENAS,
	PAIS,
	PRIMER_APE,
	RAZON_SOCIAL,
	SEGUNDO_APE,
	TELEFONO,
	URL,
	APROBADO,
	DESAFILIADO,
	RECHAZADO,
	FECHA_APROBADO,
	FECHA_DESAFILIADO,
	FECHA_RECHAZO,
	MOTIVO_RECHAZO,
	MOTIVO_DESAFILIACION,
	PENDIENTE_DESAFILIAR,
	ID_PERFIL
) SELECT
	e.ID_EMPRESA,
	e.CIUDAD,
	e.CODIGO_POSTAL,
	e.CORREO,
	e.ESTADO,
	e.NOMBRE_REPRESENTANTE,
	e.OTRAS_SENAS,
	e.PAIS,
	e.PRIMER_APE,
	e.RAZON_SOCIAL,
	e.SEGUNDO_APE,
	e.TELEFONO,
	e.URL,
	e.APROBADO,
	e.DESAFILIADO,
	e.RECHAZADO,
	e.FECHA_APROBADO,
	e.FECHA_DESAFILIADO,
	e.FECHA_RECHAZO,
	e.MOTIVO_RECHAZO,
	e.MOTIVO_DESAFILIACION,
	e.PENDIENTE_DESAFILIAR,
	p.ID_PERFIL
FROM EMPRESA e
LEFT JOIN PERFIL p
ON p.EMPRESA_ID = e.ID_EMPRESA;

DELETE FROM EMPRESA;
INSERT INTO EMPRESA
SELECT e.ID_PERFIL,
	e.CIUDAD,
	e.CODIGO_POSTAL,
	e.CORREO,
	e.ESTADO,
	e.NOMBRE_REPRESENTANTE,
	e.OTRAS_SENAS,
	e.PAIS,
	e.PRIMER_APE,
	e.RAZON_SOCIAL,
	e.SEGUNDO_APE,
	e.TELEFONO,
	e.URL,
	e.APROBADO,
	e.DESAFILIADO,
	e.RECHAZADO,
	e.FECHA_APROBADO,
	e.FECHA_DESAFILIADO,
	e.FECHA_RECHAZO,
	e.MOTIVO_RECHAZO,
	e.MOTIVO_DESAFILIACION,
	e.PENDIENTE_DESAFILIAR
FROM TEMP_EMPRESA e
WHERE e.ID_PERFIL IS NOT NULL;

--Modificar las columnas foraneas a la tabla perfil para actualizar las nuevas pk
UPDATE PERFIL
SET
	PERSONA_FISICA_ID = (CASE WHEN PERSONA_FISICA_ID IS NULL THEN NULL ELSE ID_PERFIL END),
	PERSONA_JURIDICA_ID = (CASE WHEN PERSONA_JURIDICA_ID IS NULL THEN NULL ELSE ID_PERFIL END),
	EMPRESA_ID = (CASE WHEN EMPRESA_ID IS NULL THEN NULL ELSE ID_PERFIL END);

--Modificar las columnas foraneas a la tabla perfil para activar constraint
ALTER TABLE PERFIL ENABLE CONSTRAINT FK3C538WE54EIUTJFTCT300HPJE;
ALTER TABLE PERFIL ENABLE CONSTRAINT FKB3VEHBVEOIR6Q47R7ELNWI7R1;
ALTER TABLE PERFIL ENABLE CONSTRAINT FKDRYL1FIMHGXQQACAPLCUPCIHQ;

--Eliminar registros exitosos
DELETE FROM TEMP_PERSONA_FISICA WHERE ID_PERFIL IS NOT NULL;
DELETE FROM TEMP_PERSONA_JURIDICA WHERE ID_PERFIL IS NOT NULL;
DELETE FROM TEMP_EMPRESA WHERE ID_PERFIL IS NOT NULL;

--Eliminar columna temporal
ALTER TABLE TEMP_PERSONA_FISICA DROP(ID_PERFIL);
ALTER TABLE TEMP_PERSONA_JURIDICA DROP(ID_PERFIL);
ALTER TABLE TEMP_EMPRESA DROP(ID_PERFIL);

--Eliminar las tablas temporales
--DROP TABLE TEMP_PERSONA_FISICA;
--DROP TABLE TEMP_PERSONA_JURIDICA;
--DROP TABLE TEMP_EMPRESA;

--Crear tabla opciones_menu
CREATE TABLE OPCIONES_MENU(
	"ID_OPCION" NUMBER(19,0) NOT NULL ENABLE,
	"FK_OPCION" NUMBER(19,0),
	"ACTIVO" NUMBER(1,0) NOT NULL ENABLE,
	"CLASE" VARCHAR2(40 CHAR),
	"FECHA_CREACION" DATE NOT NULL ENABLE,
	"ICONO" VARCHAR2(40),
	"OPCION_TURNO" NUMBER(1,0),
	"PADRE" NUMBER(1,0) NOT NULL ENABLE,
	"RUTA" VARCHAR2(40),
	"TITULO" VARCHAR2(40 CHAR) NOT NULL ENABLE,
	 CONSTRAINT "OPCIONES_MENU_PK" PRIMARY KEY ("ID_OPCION")
);

--Insertar opciones_menu
INSERT INTO OPCIONES_MENU VALUES(1, 0, 1, NULL, TIMESTAMP '2021-09-09 00:00:00.000000', 'topic', 0, 1, NULL, 'Reportes');
INSERT INTO OPCIONES_MENU VALUES(2, 1, 1, NULL, TIMESTAMP '2021-09-09 00:00:00.000000', 'topic', 0, 0, 'reporte-hacienda', 'Reporte Hacienda');
INSERT INTO OPCIONES_MENU VALUES(3, 1, 1, NULL, TIMESTAMP '2021-09-09 00:00:00.000000', 'topic', 0, 0, 'reporte-graficos', 'Reporte Gráficos');
INSERT INTO OPCIONES_MENU VALUES(4, 0, 1, NULL, TIMESTAMP '2021-09-09 00:00:00.000000', 'topic', 0, 1, NULL, 'Clientes');
INSERT INTO OPCIONES_MENU VALUES(5, 4, 1, NULL, TIMESTAMP '2021-09-09 00:00:00.000000', 'topic', 0, 0, '/perfiles', 'Consulta de Clientes');
INSERT INTO OPCIONES_MENU VALUES(6, 4, 1, NULL, TIMESTAMP '2021-09-09 00:00:00.000000', 'topic', 0, 0, '/asignar-analista', 'Asignar por Analista');
INSERT INTO OPCIONES_MENU VALUES(7, 4, 1, NULL, TIMESTAMP '2021-09-09 00:00:00.000000', 'topic', 0, 0, '/desafiliar', 'Pendientes de Desafiliar');
INSERT INTO OPCIONES_MENU VALUES(8, 0, 1, NULL, TIMESTAMP '2021-09-09 00:00:00.000000', 'topic', 0, 0, '/usuarios', 'Usuarios de sistema');
INSERT INTO OPCIONES_MENU VALUES(9, 0, 1, NULL, TIMESTAMP '2021-09-09 00:00:00.000000', 'topic', 0, 0, '/usuario', 'Usuario');

--Insertar roles del sistema
INSERT INTO ROLES_SISTEMA (ID_ROLES_SISTEMA,ACTIVO,CODIGO,FECHA_CREACION,NOMBRE) VALUES (21,1,'JEFATURA',CURRENT_TIMESTAMP,'Jefatura');
INSERT INTO ROLES_SISTEMA (ID_ROLES_SISTEMA,ACTIVO,CODIGO,FECHA_CREACION,NOMBRE) VALUES (22,1,'ANALISTA',CURRENT_TIMESTAMP,'Analista');
INSERT INTO ROLES_SISTEMA (ID_ROLES_SISTEMA,ACTIVO,CODIGO,FECHA_CREACION,NOMBRE) VALUES (23,1,'REPORTE',CURRENT_TIMESTAMP,'Reporte');

--Crear tabla rol_sistema_opcion
CREATE TABLE ROL_SISTEMA_OPCION(
	"ROL_SISTEMA_OPCION" NUMBER(19,0) NOT NULL ENABLE,
	"FK_OPCION" NUMBER(19,0),
	"ID_ROL" NUMBER(19,0),
	PRIMARY KEY ("ROL_SISTEMA_OPCION"),
	CONSTRAINT "FKSDRXPF29HQWSXA3V0PFLBUWVB" FOREIGN KEY ("FK_OPCION")
	REFERENCES OPCIONES_MENU ("ID_OPCION") ENABLE,
	CONSTRAINT "FKE04XAMXX9SGDELFT05G9DVDMC" FOREIGN KEY ("ID_ROL")
	REFERENCES "ROLES_SISTEMA" ("ID_ROLES_SISTEMA") ENABLE
);

--Insertar datos tabla rol_sistema_opcion
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(1, 1, 1);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(2, 1, 2);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(3, 1, 3);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(4, 1, 4);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(5, 1, 5);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(6, 1, 6);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(7, 1, 7);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(8, 1, 8);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(9, 1, 9);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(10, 21, 1);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(11, 21, 2);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(12, 21, 3);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(13, 21, 4);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(14, 21, 5);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(15, 21, 6);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(16, 21, 7);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(17, 21, 9);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(18, 22, 4);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(19, 22, 5);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(20, 22, 9);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(21, 23, 1);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(22, 23, 2);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(23, 23, 3);
INSERT INTO ROL_SISTEMA_OPCION (ROL_SISTEMA_OPCION,ID_ROL,FK_OPCION) VALUES(24, 23, 9);

DECLARE
	CURSOR perfiles_temp_cursor IS
	SELECT p.* FROM (
		SELECT
			USU_SISTEMA_ID,
			COUNT(*) AS CANTIDAD_PERFILES,
			MAX(ID_PERFIL) as ID_PERFIL
		FROM PERFIL
		GROUP BY USU_SISTEMA_ID
	) pt
	INNER JOIN PERFIL p
	ON pt.ID_PERFIL = p.ID_PERFIL
	WHERE pt.CANTIDAD_PERFILES > 1;
  perfil_registro perfiles_temp_cursor%ROWTYPE;
BEGIN
	OPEN perfiles_temp_cursor;
	FETCH perfiles_temp_cursor INTO perfil_registro;
	WHILE perfiles_temp_cursor%found
    LOOP
		IF perfil_registro.EMPRESA_ID IS NULL THEN
			DELETE FROM LOCALIZACION
			WHERE ID_PERFIL = perfil_registro.ID_PERFIL;
		END IF;
		DELETE FROM PERFIL
		WHERE ID_PERFIL = perfil_registro.ID_PERFIL;
		FETCH perfiles_temp_cursor INTO perfil_registro;
	END LOOP;
	CLOSE perfiles_temp_cursor;
END;

DELETE FROM TEMP_EMPRESA e
WHERE EXISTS(
	SELECT * FROM (
		SELECT MAX(te.ID_EMPRESA) AS ID_EMPRESA, te.CORREO, COUNT(*) AS CANTIDAD
		FROM TEMP_EMPRESA te
		GROUP BY te.CORREO
	) e2 WHERE CANTIDAD > 1 AND e2.ID_EMPRESA = e.ID_EMPRESA
);

COMMIT;

--Crear vista VIEW_PERFILES
CREATE OR REPLACE FORCE VIEW PERFILES ("ID_PERFIL", "CODIGO_TIPO_SERVICIO", "FECHA_CREACION", "CORREO_PERFIL", "OBSERVACIONES", "ID_PERSONA_FISICA", "TIPO_IDEN_FISICA", "IDENTIFICACION", "NOMBRE", "APELLIDO_1", "APELLIDO_2", "ID_PERSONA_JURIDICA", "CED_JURIDICA", "NOMBRE_COMERCIAL", "NOMBRE_REPRESENTANTE", "APELLIDO_1_REPRESENTANTE", "APELLIDO_2_REPRESENTANTE", "ID_LOC_INMUEBLE", "DIRECCION", "TELEFONO_INMUEBLE", "CODIGO", "CORREO_INMUEBLE", "URL_INMUEBLE", "FECHA_APROBACION_INMUEBLE", "FECHA_DESAFILIACION_INMUEBLE", "FECHA_RECHAZO_INMUEBLE", "APROBADO_INMUEBLE", "DESAFILIADO_INMUEBLE", "RECHAZADO_INMUEBLE", "MOTIVO_RECHAZO_INMUEBLE", "ID_PROVINCIA", "NOMBRE_PROVINCIA", "ID_CANTON", "NOMBRE_CANTON", "ID_DISTRITO", "NOMBRE_DISTRITO", "ID_EMPRESA", "NOM_REPRESENTANTE_EMPRESA", "PRIMER_APE_EMPRESA", "SEGUNDO_APE_EMPRESA", "CORREO_NOTIFICACIONES", "TELEFONO_EMPRESA", "URL_EMPRESA", "RAZON_SOCIAL_EMPRESA", "FECHA_APROBACION_EMPRESA", "FECHA_DESAFILIACION_EMPRESA", "FECHA_RECHAZO_EMPRESA", "APROBADO_EMPRESA", "DESAFILIADO_EMPRESA", "RECHAZADO_EMPRESA", "MOTIVO_RECHAZO_EMPRESA") AS 
  SELECT p.ID_PERFIL , p.CODIGO_TIPO_SERVICIO , p.FECHA_CREACION , p.CORREO AS CORREO_PERFIL, p.OBSERVACIONES,
pf.ID_PERSONA_FISICA , pf.TIPO_IDEN_FISICA , pf.IDENTIFICACION , pf.NOMBRE , pf.APELLIDO_1 , pf.APELLIDO_2 ,
pj.ID_PERSONA_JURIDICA , pj.CED_JURIDICA , pj.NOMBRE_COMERCIAL , pj.NOMBRE_REPRESENTANTE , pj.APELLIDO_1_REPRESENTANTE , pj.APELLIDO_2_REPRESENTANTE ,
l.ID_LOC_INMUEBLE , l.DIRECCION , l.TELEFONO AS TELEFONO_INMUEBLE, COALESCE(l.CODIGO,'0') AS CODIGO, l.CORREO  AS CORREO_INMUEBLE, l.URL_INMUEBLE1 AS URL_INMUEBLE, 
l.FECHA_APROBACION AS FECHA_APROBACION_INMUEBLE , l. FECHA_DESAFILIACION AS FECHA_DESAFILIACION_INMUEBLE , l.FECHA_RECHAZO AS FECHA_RECHAZO_INMUEBLE ,l.APROBADO AS APROBADO_INMUEBLE , 
l.DESAFILIADO AS DESAFILIADO_INMUEBLE, l.RECHAZADO AS RECHAZADO_INMUEBLE, l.MOTIVO_RECHAZO AS MOTIVO_RECHAZO_INMUEBLE ,
pro.ID_PROVINCIA , pro.NOMBRE AS NOMBRE_PROVINCIA,
c.ID_CANTON , c.NOMBRE AS NOMBRE_CANTON,
d.ID_DISTRITO , d.NOMBRE AS NOMBRE_DISTRITO,
e.ID_EMPRESA , e.NOMBRE_REPRESENTANTE AS NOM_REPRESENTANTE_EMPRESA, e.PRIMER_APE AS  PRIMER_APE_EMPRESA, e.SEGUNDO_APE AS SEGUNDO_APE_EMPRESA, e.CORREO AS CORREO_NOTIFICACIONES,
e.TELEFONO AS TELEFONO_EMPRESA, e.URL AS URL_EMPRESA , e.RAZON_SOCIAL AS RAZON_SOCIAL_EMPRESA, e.FECHA_APROBADO AS FECHA_APROBACION_EMPRESA , e.FECHA_DESAFILIADO AS FECHA_DESAFILIACION_EMPRESA , 
e.FECHA_RECHAZO AS FECHA_RECHAZO_EMPRESA , e.APROBADO AS APROBADO_EMPRESA , e.DESAFILIADO AS DESAFILIADO_EMPRESA, e.RECHAZADO AS RECHAZADO_EMPRESA, e.MOTIVO_RECHAZO AS MOTIVO_RECHAZO_EMPRESA
FROM PERFIL p
FULL OUTER JOIN LOCALIZACION l
ON l.ID_PERFIL = p.ID_PERFIL
LEFT OUTER JOIN PERSONA_FISICA pf
ON pf.ID_PERSONA_FISICA = p.PERSONA_FISICA_ID
LEFT OUTER JOIN PERSONA_JURIDICA pj
ON pj.ID_PERSONA_JURIDICA = p.PERSONA_JURIDICA_ID
LEFT OUTER JOIN PROVINCIA pro
ON pro.ID_PROVINCIA = l.PROVINCIA
LEFT OUTER JOIN CANTON c
ON c.ID_CANTON = l.CANTON
LEFT OUTER JOIN DISTRITO d
ON d.ID_DISTRITO = l.DISTRITO
LEFT OUTER JOIN EMPRESA e 
ON e.ID_EMPRESA = p.EMPRESA_ID
ORDER BY p.ID_PERFIL;

--Crear vista VIEW_PERFIL
CREATE VIEW VIEW_PERFIL ("ID", "ID_PERFIL", "PERFIL_NOMBRE", "ID_TIPO_SERVICIO", "TIPO_SERVICIO_NOMBRE", "CODIGO", "TIPO_IDENTIFICACION", "IDENTIFICACION", "NOMBRE", "PRIMER_APELLIDO", "SEGUNDO_APELLIDO", "PROVINCIA", "CANTON", "DISTRITO", "DIRECCION", "TELEFONO", "CORREO", "URL", "APROBADO", "DESAFILIADO", "PENDIENTE_DESAFILIAR", "RECHAZADO", "FECHA_APROBACION", "FECHA_DESAFILIACION", "FECHA_RECHAZO", "MOTIVO_DESAFILIACION", "MOTIVO_RECHAZO", "ID_EMPRESA", "ID_LOC_INMUEBLE", "ID_ANALISTA", "ID_JEFE", "EDITABLE") AS 
  SELECT ROWNUM AS ID,
  	p.ID_PERFIL AS ID_PERFIL,
  	p.CODIGO_TIPO_SERVICIO AS PERFIL_NOMBRE,
  	ts.ID_TIPO_SERVICIO AS ID_TIPO_SERVICIO,
  	ts.NOMBRE AS TIPO_SERVICIO_NOMBRE,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN NULL
	ELSE l.CODIGO END AS DESAFILIADO,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN NULL
	WHEN p.PERSONA_FISICA_ID IS NOT NULL THEN pf.TIPO_IDEN_FISICA
	ELSE 'Cédula Jurídica' END AS TIPO_IDENTIFICACION,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN NULL
	WHEN p.PERSONA_FISICA_ID IS NOT NULL THEN pf.IDENTIFICACION 
	ELSE pj.CED_JURIDICA  END AS IDENTIFICACION,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN e.NOMBRE_REPRESENTANTE
	WHEN p.PERSONA_FISICA_ID IS NOT NULL THEN pf.NOMBRE
	ELSE pj.NOMBRE_REPRESENTANTE END AS NOMBRE,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN e.PRIMER_APE
	WHEN p.PERSONA_FISICA_ID IS NOT NULL THEN pf.APELLIDO_1
	ELSE pj.APELLIDO_1_REPRESENTANTE  END AS PRIMER_APELLIDO,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN e.SEGUNDO_APE
	WHEN p.PERSONA_FISICA_ID IS NOT NULL THEN pf.APELLIDO_2
	ELSE pj.APELLIDO_2_REPRESENTANTE END AS SEGUNDO_APELLIDO,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN NULL
	ELSE p2.NOMBRE END AS PROVINCIA,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN NULL
	ELSE c.NOMBRE END AS CANTON,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN NULL
	ELSE d.NOMBRE END AS DISTRITO,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN NULL
	ELSE l.DIRECCION  END AS DIRECCION,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN e.TELEFONO
	ELSE l.TELEFONO END AS TELEFONO,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN e.CORREO
	ELSE l.CORREO END AS CORREO,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN e.URL
	ELSE l.URL_INMUEBLE1 END AS URL,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN e.APROBADO
	ELSE l.APROBADO END AS APROBADO,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN e.DESAFILIADO
	ELSE l.DESAFILIADO END AS DESAFILIADO,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN e.PENDIENTE_DESAFILIAR
	ELSE l.PENDIENTE_DESAFILIAR END AS PENDIENTE_DESAFILIAR,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN e.RECHAZADO
	ELSE l.RECHAZADO END AS RECHAZADO,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN e.FECHA_APROBADO
	ELSE l.FECHA_APROBACION END AS FECHA_APROBACION,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN e.FECHA_DESAFILIADO
	ELSE l.FECHA_DESAFILIACION END AS FECHA_DESAFILIACION,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN e.FECHA_RECHAZO
	ELSE l.FECHA_RECHAZO END AS FECHA_RECHAZO,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN e.MOTIVO_DESAFILIACION
	ELSE l.MOTIVO_DESAFILIACION END AS MOTIVO_DESAFILIACION,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN e.MOTIVO_RECHAZO
	ELSE l.MOTIVO_RECHAZO END AS MOTIVO_RECHAZO,
	e.ID_EMPRESA,
	l.ID_LOC_INMUEBLE,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN epa.USUARIO_SISTEMA_ID
	ELSE epa2.USUARIO_SISTEMA_ID END AS ID_ANALISTA,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN epa.JEFE_ID
	ELSE epa2.JEFE_ID END AS ID_JEFE,
	CASE WHEN p.EMPRESA_ID IS NOT NULL THEN NULL
	ELSE l.EDITABLE END AS EDITABLE
FROM PERFIL p
LEFT JOIN TIPO_SERVICIO ts
ON ts.ID_TIPO_SERVICIO = p.TIPO_SERVICIO_ID
LEFT JOIN EMPRESA e
ON e.ID_EMPRESA = p.EMPRESA_ID
LEFT JOIN LOCALIZACION l
ON l.ID_PERFIL = p.ID_PERFIL
LEFT JOIN PERSONA_FISICA pf
ON pf.ID_PERSONA_FISICA = p.PERSONA_FISICA_ID
LEFT JOIN PERSONA_JURIDICA pj
ON pj.ID_PERSONA_JURIDICA = p.PERSONA_JURIDICA_ID
LEFT JOIN PROVINCIA p2
ON p2.ID_PROVINCIA = l.PROVINCIA
LEFT JOIN CANTON c
ON c.ID_CANTON = l.CANTON
LEFT JOIN DISTRITO d
ON d.ID_DISTRITO = l.DISTRITO
LEFT JOIN ESTABLECIMIENTO_POR_ANALISTA epa
ON epa.EMPRESA_ID = e.ID_EMPRESA
LEFT JOIN ESTABLECIMIENTO_POR_ANALISTA epa2
ON epa2.LOC_INMUEBLE_ID = l.ID_LOC_INMUEBLE
ORDER BY ID;